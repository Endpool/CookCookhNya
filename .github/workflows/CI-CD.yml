name: CI-CD

on:
  push:
    branches:
      - main
      - dev

jobs:      
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true
    
      - name: Update submodules explicitly
        run: |
          git submodule update --init --recursive
          # Set submodule branches based on the main repo branch
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            git submodule foreach 'git checkout main && git pull origin main'
          elif [ "${{ github.ref }}" = "refs/heads/dev" ]; then
            git submodule foreach 'git checkout dev && git pull origin dev'
          fi
    
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
    
      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./Backend
          push: true
          tags: j0cos/cookcookhny-backend:${{ github.sha }}

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true
    
      - name: Update submodules explicitly
        run: |
          git submodule update --init --recursive
          # Set submodule branches based on the main repo branch
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            git submodule foreach 'git checkout main && git pull origin main'
          elif [ "${{ github.ref }}" = "refs/heads/dev" ]; then
            git submodule foreach 'git checkout dev && git pull origin dev'
          fi
  
      - name: Log in to Docker Hub
        uses: docker/login-action kw3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Build and push frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./Frontend
          push: true
          tags: j0cos/cookcookhny-frontend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-production:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true
      
      - name: Update submodules explicitly
        run: |
          git submodule update --init --recursive
          git submodule foreach 'git checkout main && git pull origin main'
      
      - name: Deploy to production server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/rash/app
            echo "BACKEND_TAG=${{ github.sha }}
            FRONTEND_TAG=${{ github.sha }}
            BOT_TOKEN=${{ secrets.BOT_TOKEN }}
            API_URL=http://backend:8080
            DB_NAME=${{ secrets.DB_NAME }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}" > /home/rash/app/.env
            docker compose down && docker compose -f /home/rash/app/compose.yaml up -d

  deploy-staging:
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true
      
      - name: Update submodules explicitly
        run: |
          git submodule update --init --recursive
          git submodule foreach 'git checkout dev && git pull origin dev'
      
      - name: Deploy to staging server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/rash/app-stage
            echo "BACKEND_TAG=${{ github.sha }}
            FRONTEND_TAG=${{ github.sha }}
            BOT_TOKEN=${{ secrets.BOT_TOKEN_STAGE }}
            API_URL=http://backend:8080
            DB_NAME=${{ secrets.DB_NAME }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}" > /home/rash/app-stage/.env
            docker compose down && docker compose -f /home/rash/app-stage/compose.yaml up -d
