rash@maxim1 ~/app-stage % cat compose.yaml
services:
  db:
    image: postgres:17
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db-data-stage:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    image: j0cos/cookcookhny-backend:${BACKEND_TAG}
    ports:
      - "8081:8080"
    environment:
      DB_ADDRESS: db:5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      INVITATIONS_SECRET_KEY: ${INVITATIONS_SECRET_KEY}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    image: j0cos/cookcookhny-frontend:${FRONTEND_TAG}
    environment:
      BOT_TOKEN:
      API_URL: http://backend:8080
      WEBHOOK_PORT: 8443
      WEBHOOK_HOST: 
      WEBHOOK_SECRET: 
    depends_on:
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db-data-stage:
